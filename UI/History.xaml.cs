using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace ToDoList
{
    /// <summary>
    /// Interaction logic for Window2.xaml
    /// </summary>
    public partial class History : Window
    {
        List<TaskDetails> listOfTaskDetails;
        List<Event> listOfEvents;
        List<String> listOfCompletedEvents;
        
        public History()
        {
            InitializeComponent();
            listOfCompletedEvents = new List<String>();
            
        }

        public List<Event> getEventDetails()
        {
            return listOfEvents;
        }
        public void SetEventDetails(String CompletedEvent)
        {
            listOfCompletedEvents.Add(CompletedEvent);
            Conversions objectConversions = new Conversions();
            listOfTaskDetails=objectConversions.convertStringIntoTaskDetails(listOfCompletedEvents);
            listOfEvents = objectConversions.convertTaskdetailsIntoEvent(listOfTaskDetails);

            datagrid.ItemsSource = listOfEvents; 

            //datagrid.AutoGeneratedColumns += new EventHandler(dgData_AutoGeneratedColumns);

            foreach (DataGridColumn item in datagrid.Columns)
            {
                MessageBox.Show(item.Header.ToString());
                if (item.Header.ToString().Equals("selectTask"))
                    item.Visibility = Visibility.Hidden;
                //datagrid.Columns.Remove(item);
            }

            
            //datagrid.Columns[9].Visibility = Visibility.Collapsed;
           // datagrid.Columns.IndexOf(selectTask);

           //  datagrid.ScrollIntoView(eventObj,);
        }


        private void datagrid_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {

        }


    }
}
